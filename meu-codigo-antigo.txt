

const carregarTarefas = () => {
    //verifica se tem algo no local storage
    const taskList = document.querySelector('#taskList');
    const tarefas = JSON.parse(localStorage.getItem('tarefas')) || [];
    
    // se tiver vai pro if
    tarefas.forEach(tarefa =>{
        const taskItem = document.createElement('div');
        taskItem.classList.add('task-item');
        if (tarefa.concluida){
            taskItem.classList.add('concluida');

        }

        taskItem.innerHTML = tarefa.html;
        taskList.appendChild(taskItem);

        taskItem.querySelector('.complete-btn').addEventListener('click', function() {
            marcarComoConcluida(this);
        });

        taskItem.querySelector('.edit-btn').addEventListener('click', function() {
            editarTarefa(this);
        });

        taskItem.querySelector('.delete-btn').addEventListener('click', function() {
            excluirTarefa(this);
        });
    })
}

const adicionarTarefa = () =>{
    const dataTarefa = document.querySelector('#taskDate').value;
    const horaTarefa = document.querySelector('#taskTime').value;
    const tituloTarefa = document.querySelector('#taskName').value;
    const descricaoTarefa = document.querySelector('#taskDescription').value;

    console.log(dataTarefa);

    const dataInput = dataTarefa.split('-');
    console.log(dataInput)

    if (tituloTarefa && dataTarefa && horaTarefa){
        //formatar a data
        const taskList = document.querySelector('#taskList');
        const taskItem = document.createElement('div');
        taskItem.classList.add('task-item');

        const dataFormatada = `${dataInput[2]}/${dataInput[1]}/${dataInput[0]}`;

        //  const dataFormatada = new Date (dataTarefa).toLocaleDateString('pt-BR', {
        //     day: '2-digit',
        //     month: '2-digit',
        //     year: '2-digit', //se remover isso, fica sem o ano
        

         const taskHTML = `
            <h3>${tituloTarefa}</h3>
            <p>${descricaoTarefa}</p>
            <p><strong>Vencimento:</strong> às ${horaTarefa} do dia ${dataFormatada}</p>
            <div class="task-actions">
                <button class="complete-btn">Concluir</button>
                <button class="edit-btn">Editar</button>
                <button class="delete-btn">Excluir</button>
            </div>`


            taskItem.innerHTML = taskHTML;
            taskList.appendChild(taskItem);

            taskItem.querySelector('.complete-btn').addEventListener('click', function() {
                marcarComoConcluida(this);
            });
    
            taskItem.querySelector('.edit-btn').addEventListener('click', function() {
                editarTarefa(this);
            });
    
            taskItem.querySelector('.delete-btn').addEventListener('click', function() {
                excluirTarefa(this);
            });

            const tarefas = JSON.parse(localStorage.getItem('tarefas')) || [];

            tarefas.push({
                nome: tituloTarefa,
                descricao: descricaoTarefa,
                data: dataFormatada,
                hora: horaTarefa,
                html: taskHTML
            });

            localStorage.setItem('tarefas', JSON.stringify(tarefas));
            alert('Tarefa adiciona com sucesso!');
            document.querySelector('#taskForm').reset();
    }
    else{
        alert('Por favor, preencha todos os campos obrigatórios.')
    }
}

window.onload = function(){
    carregarTarefas();

    document.querySelector('#adicionarTarefaBtn').addEventListener('click', function(e){
        e.preventDefault();
        adicionarTarefa();
    });

    // Adicionando event listeners para os botões
  document.querySelector('#adicionarTarefaBtn').addEventListener('click', function (e) {
    e.preventDefault();
    adicionarTarefa();
  });

  // Event listeners para os botões de filtro
  document.querySelector('#filtrarTodasBtn').addEventListener('click', function() {
    filtrarTarefas('todas');
  });
  
  document.querySelector('#filtrarPendentesBtn').addEventListener('click', function() {
    filtrarTarefas('pendentes');
  });
  
  document.querySelector('#filtrarConcluidasBtn').addEventListener('click', function() {
    filtrarTarefas('concluidas');
  });
  
  // Event listeners para os botões de ordenação
  document.querySelector('#ordenarRecentesBtn').addEventListener('click', function() {
    ordenarTarefas('recentes');
  });
  
  document.querySelector('#ordenarAntigasBtn').addEventListener('click', function() {
    ordenarTarefas('antigas');
  });
}

const marcarComoConcluida = (button) =>{
    const taskItem = button.closest('.task-item');
    console.log(taskItem);

    if (taskItem.classList.contains('concluida')){
        alert('Esta tarefa já foi concluida!');
        return;
    }

    taskItem.classList.add("concluida");

    const editBtn = taskItem.querySelector('.edit-btn');
    const deleteBtn = taskItem.querySelector('.delete-btn');
    editBtn.disabled = true;
    deleteBtn.disabled = true;

    // att localstorage

    const tituloTarefa = taskItem.querySelector('h3').textContent;
    let tarefas = JSON.parse(localStorage.getItem('tarefas')) || [];
    const tarefaIndex = tarefas.findIndex(t => t.nome === tituloTarefa);
    if (tarefaIndex !== -1){
        tarefas[tarefaIndex].concluida = true;
        tarefas[tarefaIndex].html = taskItem.innerHTML;

        localStorage.setItem('tarefas', JSON.stringify(tarefas));
    }

    setTimeout(() => {
        alert('tarefa marcada como concluida')
    }, 200)
}

// const editarTarefa = (button) => {
//     const taskItem = button.closest('.task-item');
//     console.log(taskItem);

//     const novoTitulo = prompt('Altere o nome do título:');
//     const novaDescricao = prompt('Altere a descrição:');
//     const novoHorario = prompt('Altere o horário:');
//     const novaData = prompt('Altere a data:');
//     console.log(novoTitulo);
//     console.log(novaDescricao);
//     console.log(novoHorario);
//     console.log(novaData);

//     taskItem.innerHTML = `
//     <h3>${novoTitulo}</h3>
//     <p>${novaDescricao}</p>
//     <p><strong>Vencimento:</strong> às ${novoHorario} do dia ${novaData}</p>
//     <div class="task-actions">
//         <button class="complete-btn">Concluir</button>
//         <button class="edit-btn">Editar</button>
//         <button class="delete-btn">Excluir</button>
//     </div>`
    
// };

const editarTarefa = (button) => {
    const taskItem = button.closest('.task-item');
    const newName = prompt('Edite o nome da tarefa:', taskItem.querySelector('h3').textContent);
    const newDescription = prompt('Edite a descrição da tarefa:', taskItem.querySelector('p').textContent)

    if (newName) taskItem.querySelector('h3').textContent = newName;
    if (newDescription) taskItem.querySelector('p').textContent = newDescription;

    
};

const excluirTarefa = (button) => {
    if (confirm('Deseja mesmo excluir essa tarefa?')){
        const taskItem = button.closest('.task-item');
        const taskName = taskItem.querySelector('h3').textContent;

        let tarefas = JSON.parse(localStorage.getItem('tarefas')) || [];

        tarefas = tarefas.filter(t => t.nome !== taskName);
        localStorage.setItem('tarefas', JSON.stringify(tarefas));

        taskItem.remove();

        alert('tarefa excluida.');
    }

}

const filtrarTarefas = (filtro) => {
    const tarefas = document.querySelectorAll('.task-item');
    console.log(tarefas);
    tarefas.forEach(tarefa => {
        switch(filtro){
            case 'todas':
                tarefa.style.display = 'block';
                break;
            case 'pendentes':
                tarefa.style.display = tarefa.classList.contains('concluida') ? 'none' : 'block';
                break;

            case 'concluidas':
                tarefa.style.display = tarefa.classList.contains('concluida') ? 'none' : 'block';
                break;
        }
    })
}

// const ordenarTarefas = (ordem) => {
//     //primeiro precisa transformar as tarefas em uma lista com array, para poder percorrer ela com um for each e ordernar qual é a mais recente e mais antiga
//     //depois precisa usar um sort para fazer essa ordenação, ai vai percorrendo a lista e verificando qual é mais recente e qual é mais antiga para poder classificar dependendo do botao que for clicar
//     // fazer com base na data de mais recentes e antigos
//     const listaTarefas = document.querySelectorAll('.task-list'); //pega as tarefas
//     const tarefas = Array.from(listaTarefas); //transforma em lista e guarda ela em uma variavel


//     listaTarefas.sort((tarefa01, tarefa02) => {
//         //pega a data e transforma em objeto de data
//         const data01 = new Date(tarefa01.querySelector('#taskDate').textContent);
//         const data02 = new Date(tarefa02.querySelector('#taskDate').textContent);
        
//         if (ordem == 'recentes'){
//             return data01 - data02;
//         }
//         else{
//             return data02 - data01;
//         }
//     });

//     tarefas.forEach(tarefas => {

//     })
    
// }

const ordenarTarefas = (ordem) => {
    const taskList = document.querySelector('#taskList');
    const tarefas = Array.from(document.querySelectorAll('.task-item'));
    const dadosTarefas = JSON.parse(localStorage.getItem('tarefas')) || [];

    tarefas.sort((a,b) => {
        const nomeA = a.querySelector('h3').textContent;
        const nomeB = b.querySelector('h3').textContent;

        const tarefaA = dadosTarefas.find(t => t.nome === nomeA);
        const tarefaB = dadosTarefas.find(t => t.nome === nomeB);

        const dataA = new Date(`${tarefaA.data}T${tarefaA.hora}`);
        const dataB = new Date(`${tarefaB.data}T${tarefaB.hora}`);

        return ordem === 'antigas' ? dataA - dataB : dataB - dataA;
    });

    taskList.innerHTML = '<h2>Suas Tarefas</h2>';
    tarefas.forEach(tarefa => taskList.appendChild(tarefa));
};